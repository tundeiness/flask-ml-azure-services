# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'c09d4112-c82d-4639-9519-00ec4806fc51'

  # Web app name
  webAppName: 'azWebApp002'

  # Environment name
  environmentName: 'azWebApp002'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  pythonVersion: '3.11'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      name: 'macagent'
    steps:
    - script: |
        python3.11 --version
        python3.11 -m venv antenv
        source antenv/bin/activate
        make install
        make lint
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Setup Python 3.11 and Install requirements"
    
    - script: |
        python3.11 --version
        python3.11 -m venv antenv
        source antenv/bin/activate
        make install
        make lint
      workingDirectory: $(projectRoot)
      displayName: 'Run lint tests'


    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      name: 'macagent'
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            displayName: 'Download build artifacts'
            
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : azWebApp002'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip